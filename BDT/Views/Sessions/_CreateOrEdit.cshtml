@model BDT.ViewModels.SessionViewModel

@Html.HiddenFor(model => model.Session.Id)

<div class="editor-label">
    @Html.LabelFor(model => model.Session.Name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Session.Name)
    @Html.ValidationMessageFor(model => model.Session.Name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Session.Locations)
</div>
<div class="editor-field">
    @{
        List<int> ids = Model.Session.Locations.Select(loc => loc.Id ).ToList();
    }
    @Html.ListBoxFor(model => ids,
                         Model.Locations, 
                         new { @multiple = "multiple", @class="chosen"})
    @Html.ValidationMessageFor(model => model.Session.Locations)
</div>


@{
    if (Model.Session.SessionDates != null)
    {
        <div class="editor-label">
            @Html.LabelFor(model => model.Session.SessionDates)
        </div>
        <div class="editor-field">
            <a class="btn btn-success" id="addSession" href="@Url.Action("Dates", "Sessions", new {id = Model.Session.Id})">
                <i class="icon-plus icon-white"></i> Add Dates
            </a>
            @Html.DisplayFor(model => model.Session.SessionDates, "SessionDates")        
        </div>
    }
}

<link href="../../Content/chosen.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/libs/chosen.min.js" type="text/javascript"></script>
<script>
    $(function () {
        $('.chosen').chosen();
    });
</script>